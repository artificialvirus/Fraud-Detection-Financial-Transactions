# File: .github/workflows/main.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 0' # Weekly retraining

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        lfs: true  # Enable Git LFS

    - name: Install Git LFS
      run: |
        sudo apt-get install git-lfs
        git lfs install

    - name: Fetch LFS files
      run: git lfs pull

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify CSV file
      run: |
        ls -l data
        head -n 5 data/creditcard.csv

    - name: Retrain model
      run: |
        python train.py

    - name: Verify model files
      run: |
        ls -l
        if [ ! -f best_xgb_model.pkl ]; then echo "best_xgb_model.pkl not found"; exit 1; fi
        if [ ! -f best_dl_model.keras ]; then echo "best_dl_model.keras not found"; exit 1; fi

    - name: Save XGBoost model artifact
      uses: actions/upload-artifact@v2
      with:
        name: best_xgb_model
        path: best_xgb_model.pkl

    - name: Save Deep Learning model artifact
      uses: actions/upload-artifact@v2
      with:
        name: best_dl_model
        path: best_dl_model.keras

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download XGBoost model artifact
      uses: actions/download-artifact@v2
      with:
        name: best_xgb_model

    - name: Download Deep Learning model artifact
      uses: actions/download-artifact@v2
      with:
        name: best_dl_model

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t fraud_detection_api .
        docker tag fraud_detection_api:latest ${{ secrets.DOCKER_USERNAME }}/fraud_detection_api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/fraud_detection_api:latest
